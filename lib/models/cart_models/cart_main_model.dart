import 'package:plunes/models/Models.dart';
import 'package:plunes/models/solution_models/searched_doc_hospital_result.dart';

class Autogenerated {
  bool success;
  Data data;
  int subTotal;
  String msg;

  Autogenerated({this.success, this.data, this.subTotal, this.msg});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
    subTotal = json['subTotal'];
    msg = json['msg'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['success'] = this.success;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    data['subTotal'] = this.subTotal;
    data['msg'] = this.msg;
    return data;
  }
}

class Data {
  List<BookingIds> bookingIds;
  List<int> paymentOptions;
  String sId;
  String userId;
  int iV;
  String createdAt;
  String updatedAt;
  bool zestMoney;

  Data(
      {this.bookingIds,
      this.paymentOptions,
      this.sId,
      this.userId,
      this.iV,
      this.createdAt,
      this.updatedAt,
      this.zestMoney});

  Data.fromJson(Map<String, dynamic> json) {
    if (json['bookingIds'] != null) {
      bookingIds = new List<BookingIds>();
      json['bookingIds'].forEach((v) {
        bookingIds.add(new BookingIds.fromJson(v));
      });
    }
    paymentOptions = json['paymentOptions'].cast<int>();
    sId = json['_id'];
    userId = json['userId'];
    iV = json['__v'];
    createdAt = json['createdAt'];
    updatedAt = json['updatedAt'];
    zestMoney = json['zestMoney'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.bookingIds != null) {
      data['bookingIds'] = this.bookingIds.map((v) => v.toJson()).toList();
    }
    data['paymentOptions'] = this.paymentOptions;
    data['_id'] = this.sId;
    data['userId'] = this.userId;
    data['__v'] = this.iV;
    data['createdAt'] = this.createdAt;
    data['updatedAt'] = this.updatedAt;
    data['zestMoney'] = this.zestMoney;
    return data;
  }
}

class BookingIds {
  Services service;
  Location location;
  String currency;
  int amountPaid;
  int amountPaidCredits;
  int amountDue;
  String bookingStatus;
  bool rescheduled;
  bool creditsUsed;
  String refundStatus;
  bool doctorConfirmation;
  String bookedFrom;
  bool transferStatus;
  List<Null> paymentReferenceId;
  String sId;
  String solutionServiceId;
  String serviceId;
  String paymentPercent;
  String timeSlot;
  String professionalId;
  String appointmentTime;
  String userId;
  String coupon;
  Null bookIn;
  String doctorId;
  String patientAge;
  String patientMobileNumber;
  String patientName;
  String patientSex;
  String userName;
  String userMobileNumber;
  List<Null> paymentProgress;
  int createdAt;
  List<Null> mcmUserInfo;
  List<Null> paymentProgressHistory;
  String serviceName;
  String specialityId;
  String specialityName;
  String referenceId;
  String updatedAt;
  int iV;

  BookingIds(
      {this.service,
      this.location,
      this.currency,
      this.amountPaid,
      this.amountPaidCredits,
      this.amountDue,
      this.bookingStatus,
      this.rescheduled,
      this.creditsUsed,
      this.refundStatus,
      this.doctorConfirmation,
      this.bookedFrom,
      this.transferStatus,
      this.paymentReferenceId,
      this.sId,
      this.solutionServiceId,
      this.serviceId,
      this.paymentPercent,
      this.timeSlot,
      this.professionalId,
      this.appointmentTime,
      this.userId,
      this.coupon,
      this.bookIn,
      this.doctorId,
      this.patientAge,
      this.patientMobileNumber,
      this.patientName,
      this.patientSex,
      this.userName,
      this.userMobileNumber,
      this.paymentProgress,
      this.createdAt,
      this.mcmUserInfo,
      this.paymentProgressHistory,
      this.serviceName,
      this.specialityId,
      this.specialityName,
      this.referenceId,
      this.updatedAt,
      this.iV});

  BookingIds.fromJson(Map<String, dynamic> json) {
    service =
        json['service'] != null ? new Services.fromJson(json['service']) : null;
    location = json['location'] != null
        ? new Location.fromJson(json['location'])
        : null;
    currency = json['currency'];
    amountPaid = json['amountPaid'];
    amountPaidCredits = json['amountPaidCredits'];
    amountDue = json['amountDue'];
    bookingStatus = json['bookingStatus'];
    rescheduled = json['rescheduled'];
    creditsUsed = json['creditsUsed'];
    refundStatus = json['refundStatus'];
    doctorConfirmation = json['doctorConfirmation'];
    bookedFrom = json['bookedFrom'];
    transferStatus = json['transferStatus'];
    if (json['paymentReferenceId'] != null) {
//      paymentReferenceId = new List<Null>();
//      json['paymentReferenceId'].forEach((v) {
//        paymentReferenceId.add(new Null.fromJson(v));
//      });
    }
    sId = json['_id'];
    solutionServiceId = json['solutionServiceId'];
    serviceId = json['serviceId'];
    paymentPercent = json['paymentPercent'];
    timeSlot = json['timeSlot'];
    professionalId = json['professionalId'];
    appointmentTime = json['appointmentTime'];
    userId = json['userId'];
    coupon = json['coupon'];
    bookIn = json['bookIn'];
    doctorId = json['doctorId'];
    patientAge = json['patientAge'];
    patientMobileNumber = json['patientMobileNumber'];
    patientName = json['patientName'];
    patientSex = json['patientSex'];
    userName = json['userName'];
    userMobileNumber = json['userMobileNumber'];
    if (json['paymentProgress'] != null) {
//      paymentProgress = new List<Null>();
//      json['paymentProgress'].forEach((v) {
//        paymentProgress.add(new Null.fromJson(v));
//      });
    }
    createdAt = json['createdAt'];
    if (json['mcmUserInfo'] != null) {
//      mcmUserInfo = new List<Null>();
//      json['mcmUserInfo'].forEach((v) {
//        mcmUserInfo.add(new Null.fromJson(v));
//      });
    }
    if (json['paymentProgressHistory'] != null) {
//      paymentProgressHistory = new List<Null>();
//      json['paymentProgressHistory'].forEach((v) {
//        paymentProgressHistory.add(new Null.fromJson(v));
//      });
    }
    serviceName = json['serviceName'];
    specialityId = json['specialityId'];
    specialityName = json['specialityName'];
    referenceId = json['referenceId'];
    updatedAt = json['updatedAt'];
    iV = json['__v'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.service != null) {
      data['service'] = this.service.toJson();
    }
    if (this.location != null) {
      data['location'] = this.location.toJson();
    }
    data['currency'] = this.currency;
    data['amountPaid'] = this.amountPaid;
    data['amountPaidCredits'] = this.amountPaidCredits;
    data['amountDue'] = this.amountDue;
    data['bookingStatus'] = this.bookingStatus;
    data['rescheduled'] = this.rescheduled;
    data['creditsUsed'] = this.creditsUsed;
    data['refundStatus'] = this.refundStatus;
    data['doctorConfirmation'] = this.doctorConfirmation;
    data['bookedFrom'] = this.bookedFrom;
    data['transferStatus'] = this.transferStatus;
    if (this.paymentReferenceId != null) {
//      data['paymentReferenceId'] =
//          this.paymentReferenceId.map((v) => v.toJson()).toList();
    }
    data['_id'] = this.sId;
    data['solutionServiceId'] = this.solutionServiceId;
    data['serviceId'] = this.serviceId;
    data['paymentPercent'] = this.paymentPercent;
    data['timeSlot'] = this.timeSlot;
    data['professionalId'] = this.professionalId;
    data['appointmentTime'] = this.appointmentTime;
    data['userId'] = this.userId;
    data['coupon'] = this.coupon;
    data['bookIn'] = this.bookIn;
    data['doctorId'] = this.doctorId;
    data['patientAge'] = this.patientAge;
    data['patientMobileNumber'] = this.patientMobileNumber;
    data['patientName'] = this.patientName;
    data['patientSex'] = this.patientSex;
    data['userName'] = this.userName;
    data['userMobileNumber'] = this.userMobileNumber;
    if (this.paymentProgress != null) {
//      data['paymentProgress'] =
//          this.paymentProgress.map((v) => v.toJson()).toList();
    }
    data['createdAt'] = this.createdAt;
    if (this.mcmUserInfo != null) {
//      data['mcmUserInfo'] = this.mcmUserInfo.map((v) => v.toJson()).toList();
    }
    if (this.paymentProgressHistory != null) {
//      data['paymentProgressHistory'] =
//          this.paymentProgressHistory.map((v) => v.toJson()).toList();
    }
    data['serviceName'] = this.serviceName;
    data['specialityId'] = this.specialityId;
    data['specialityName'] = this.specialityName;
    data['referenceId'] = this.referenceId;
    data['updatedAt'] = this.updatedAt;
    data['__v'] = this.iV;
    return data;
  }
}
